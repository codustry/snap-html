[tools]
python = "3.8"

[env]
PYTHONPATH = "$PYTHONPATH:$PWD"

[tasks.install]
description = "Install dependencies"
run = "uv pip install -e . && uv pip install pytest pytest-asyncio pytest-cov ruff mypy safety bandit"

[tasks.venv]
description = "Setup a virtual environment with all dependencies"
run = "python -m venv .venv && echo 'Created .venv. Activate with: source .venv/bin/activate (Linux/Mac) or .venv\\Scripts\\activate (Windows)'"

[tasks.sync]
description = "Install all dependencies to the current environment from pyproject.toml"
run = "uv sync"

[tasks.sync-dev]
description = "Install all dependencies including development dependencies"
run = "uv sync --dev"

[tasks.test]
description = "Run tests"
run = "uv run pytest"

[tasks.format]
description = "Format code with ruff"
run = "uv run ruff format snap_html/ tests/ && uv run ruff check --fix snap_html/ tests/"

[tasks.lint]
description = "Run all checks"
run = "mise run test && mise run check-safety && mise run check"

[tasks.check]
description = "Check code style with ruff and mypy"
run = "uv run ruff check snap_html/ tests/ && uv run mypy --config-file setup.cfg snap_html tests/**/*.py"

[tasks.check-safety]
description = "Run safety checks"
run = "uv pip check && uv run safety check --full-report && uv run bandit -ll -r snap_html/"

[tasks.build]
description = "Build package"
run = "uv run pip install build && uv run python -m build"

[tasks.publish]
description = "Publish package to PyPI"
run = "uv run pip install twine && uv run twine upload dist/*"
